version: '3'
services:
  db:
    image: postgres:latest
    ports:
      - '5432:5432'
    environment:
      POSTGRES_DB: products
      POSTGRES_USER: root
      POSTGRES_PASSWORD: password
  tracing:
    image: openzipkin/zipkin:latest
    ports:
      - '9411:9411'
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.3
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
      - ./.data/zookeeper:/var/lib/zookeeper
  kafka:
    image: confluentinc/cp-enterprise-kafka:7.4.3
    user: "1000:1000"
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_HEAP_OPTS: -Xmx3G -Xms1G
      KAFKA_BROKER_ID: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_LOG_RETENTION_MS: -1
      KAFKA_MESSAGE_MAX_BYTES: 10485880
      KAFKA_NUM_PARTITIONS: 1
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: kafka:9092
      CONFLUENT_METRICS_REPORTER_ZOOKEEPER_CONNECT: zookeeper:2181
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
    volumes:
      - ./.data/kafka:/var/lib/kafka
      - ./.data/config/kafka:/tmp/kafka

  rest-proxy:
    image: confluentinc/cp-kafka-rest:7.4.3
    ports:
      - "9082:8082"
    environment:
      KAFKA_REST_HOST_NAME: rest-proxy
      KAFKA_REST_LISTENERS: "http://0.0.0.0:8082"
      KAFKA_REST_BOOTSTRAP_SERVERS: kafka:29092
    depends_on:
      - kafka
      - zookeeper

  akhq:
    image: tchiotludo/akhq:0.21.0
    restart: on-failure
    environment:
      AKHQ_CONFIGURATION: |
        akhq:
          connections:
            docker-kafka-server:
              properties:
                bootstrap.servers: "kafka:29092"
    ports:
      - "8089:8080"
